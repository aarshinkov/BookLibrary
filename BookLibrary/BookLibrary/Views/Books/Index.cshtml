@using PagedList
@using PagedList.Mvc
@model IEnumerable<BookLibrary.Entity.Book>

@{
    ViewBag.Title = "Books";
}

<h2>Books</h2>

@if (User.IsInRole("Admin"))
{
    <p>
        @Html.ActionLink("Create New", "Create")
    </p>
}
@if (User.Identity.IsAuthenticated)
{
    <hr />
    using (Html.BeginForm())
    {
        <div class="row">
            <div class="col-md-2">
                @Html.TextBox("bookTitleSearch", (string)ViewBag.TitleSearch, new { @class = "form-control", placeholder = "Book title", autofocus = true })
            </div>
            <div class="col-md-2">
                @Html.TextBox("writerFNameSearch", (string)ViewBag.TitleSearch, new { @class = "form-control", placeholder = "Writer first name" })
            </div>
            <div class="col-md-2">
                @Html.TextBox("writerLNameSearch", (string)ViewBag.TitleSearch, new { @class = "form-control", placeholder = "Writer last name" })
            </div>
            <button class="btn btn-primary">
                <i class="glyphicon glyphicon-search"></i>
                <span>Search</span>
            </button>
            <button type="reset" class="btn btn-success">
                <i class="glyphicon glyphicon-remove"></i>
                <span>Clear</span>
            </button>
        </div>
        <div class="col-md-2" style="height: 50px;"></div>
    }
}
<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Title", "Index", new { sortOrder = ViewBag.TitleSortParam, titleSearch = ViewBag.TitleSearch })
        </th>
        <th>
            @Html.ActionLink("Release date", "Index", new { sortOrder = ViewBag.ReleaseDateSortParam, titleSearch = ViewBag.ReleaseDateSearch })
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Genre.GenreName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Writer.FirstName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Writer.LastName)
        </th>
        @if (User.IsInRole("Admin"))
        {
            <th>Operations</th>
        }
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ReleaseDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Genre.GenreName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Writer.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Writer.LastName)
            </td>
            @if (User.IsInRole("Admin"))
            {
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.BookId }) |
                    @Html.ActionLink("Details", "Details", new { id = item.BookId }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.BookId })
                </td>
            }
        </tr>
    }

</table>

@Html.PagedListPager((IPagedList)Model, page => Url.Action("Index", new { page, titleSearch = ViewBag.TitleSearch, sortOrder = ViewBag.CurrentSortParam }))

